
users
{
    userID: {
        createdAt:
        displayName:
        email:
        organizations: array []
        role: 
    }
}

jobs
{
    jobID:{
        *"jobTitle":
        "applicationDeadline": "2025-04-29T14:00:00Z",
        "applications": array or subcollection?,
        "hiringManagerId": array []
        *riskTolerance: "high"
        "orgId":
        "status":
        "createdAt": "2025-04-29T12:00:00Z",
        *"requiredEducation": array []
        *"requiredCertifications": array []
        *"requiredSkills": array []
        *"preferredSkills": array [],
        *"requiredQuestions": array []
        "candidateResourceLinks": [] array,
        *"jobType":
        *"interviewStages":
        *"jobDepartment":
        *"jobDescription": \\query for influence, level, and day-to-day
        *"jobLocation":
        *"techStack": {
            stack: [ \\ ask for tools, technologies, other platforms
                {
                    skill: "React",
                    level: "expert",
                    realWorldApplication: "Build complex dashboards with real-time data", 
                    redFlags: ["only basic components", "no performance optimization", "no testing"],
                    weight: 0.2
                },
                {
                    skill: "Node.js/Backend",
                    level: "advanced", 
                    realWorldApplication: "Design APIs for microservices handling 10k+ RPS",
                    redFlags: ["no async understanding", "poor error handling", "security gaps"],
                    weight: 0.18
                },
                {
                    skill: "System Design",
                    level: "intermediate",
                    realWorldApplication: "Architect solutions for scaling challenges",
                    redFlags: ["no scalability awareness", "single point of failure designs"],
                    weight: 0.15
                }
            ],
            architecture: "microservices",
            scale: "10M+ users",
            challenges: ["real-time sync", "global distribution", "rapid scaling"],
            practices: ["TDD", "CI/CD", "code reviews", "pair programming"],
        }
         successCriteria: {
            immediate: {
            { metric: "Feature velocity", desciption: "2-3 major features/quarter", weight: 0.25 },
            { metric: "Code quality", description: "<2 bugs per feature", weight: 0.2 },
            { metric: "Team integration", description: "Effective collaboration within 30 days", weight: 0.15 },
            { metric: "Technical ramp", desciption: "Independent contributions within 60 days", weight: 0.2 },
            { metric: "Mentoring impact", description: "1-2 junior devs show growth", weight: 0.2 }
            },
            longTerm: {
            { metric: "Technical leadership", description: "Drive architecture decisions", weight: 0.3 },
            { metric: "Process improvement", description: "Improve team efficiency", weight: 0.25 },
            { metric: "Knowledge scaling", description: "Document and share expertise", weight: 0.2 },
            { metric: "Innovation", description: "Introduce new technologies/practices", weight: 0.25 }
            }
        },
        "candidatePersona": \\describe your ideal candidate. how do they work with other/communicatte and balh
        "travelRequirements"
        "salaryRange"
    }
}

org
{
    orgID:{
        *companyDescription:
        *companyName:
        *companySize:
        createdAt:
        hiringManagers: array [userId]
        *industry:
        *location:
        logoUrl:
        *missionStatement:
        *companyValues: [
            {
                name: trust
                description: 
                extractedKeywords?:
                weight: 
            }
        ]
        *workEnvironment:
            *techMaturity: "high"
            *structure: "autonomous",
            *communication: "async-first",
            *pace: "sprint-based",
            *growthExpectiations: "self-directed",
            *collaboration: "cross-functional"
            "teamSize":
        
        jobs: array [jobId1]
        paymentPlanCanceledDate:
        paymentPlanCanceledReason:
        paymentPlanEndDate:
        paymentPlanStartDate:
        paymentPlanStatus:
        paymentPlanTier:
        stripeCustomerId:
        stripeSubscriptionId:
    }
}

candidates
{	
    candidateID: {
        *"name": "Jane Doe",
        "email": "janedoe@example.com",
        "phone": "555-123-4567",
        *"resumeUrl": "https://example.com/resume/jane.pdf",
        *"resumeBreakdown": {}
        “applications”: [applicationID, applicationID]
        "createdAt": "2025-04-29T12:00:00Z",
        "updatedAt": "2025-04-29T12:00:00Z"
	}	
}
	
applications
{
    applicationID: {
        "candidateId": "candidateId123",
        "jobID":
        "orgID":  
        "applicationDate": "2025-04-29T14:00:00Z",
        "status": "completed",
        "messages": [
            { "role": "system", "content": "Welcome to the interview!" },
            { "role": "user", "content": "Hi, I'm ready." },
            { "role": "assistant", "content": "Great! Let's get started..." },
        ],
        "reportID": reportID
        "completedAt": "2025-04-29T15:00:00Z"
    }
}

reports
{   
    reportID: {
        "candidateId": candidateID,
        "applicationId": interviewID,
        "jobID":
        "questionResponses": [{"question": "why?", "response": "because."}]
        "summary": "Jane showed solid understanding of algorithms and was confident in her problem-solving.",
        "score": 8.7,
    }
}















// Job form fields
// const jobTitle = ref("");
// const jobDepartment = ref("");
// const jobDescription = ref("");
// const jobLocation = ref("");
// const jobSalary = ref("");
// const employmentType = ref("");
// const expectedJobDuration = ref("");
// const applicationDeadline = ref("");
// const salaryRange = ref("");
// const responsibilities = ref("");
// const requiredSkills = ref("");
// const preferredSkills = ref("");
// const minExperience = ref("");
// const requiredCertifications = ref("");
// const educationRequirements = ref("");
// const workEnvironment = ref("");
// const teamDynamics = ref("");
// const growthOpportunities = ref("");
// const interviewStages = ref("");
// const diversityInitiatives = ref("");
// const benefitsPackage = ref("");
// const remoteWorkPolicy = ref("");
// const travelRequirements = ref("");
// const onboardingProcess = ref("");
// const teamSize = ref("");
// const techStack = ref("");
// const candidateResourceLinks = ref("");
